(define (domain pr2-tamp)
	(:requirements :strips :equality)
	(:predicates
		(stackable ?o ?r)
		(sink ?r)
		(stove ?r)
		(tray ?r)
		(tray_relpose ?o ?rp)
		(table ?r)
		(grasp ?o ?g)
		(posekin ?o ?rp ?g ?q ?t)
		(computedposekin ?o1 ?wp1 ?rp ?o2 ?wp2)
		(worldposebasestove ?wp)
		(worldposebasesink ?wp)
		(atworldpose ?o ?wp)
		(worldpose ?o ?wp)
		(relpose ?o ?rp ?r)
		(atrelpose ?o ?rp)
		(atstove ?q)
		(atsink ?q)
		(atgrasp ?o ?g)
		(handempty )
		(holding_tray )
		(canmove )
		(atbconf ?q)
		(ataconf ?q)
		(cleaned ?o)
		(cooked ?o)
		(canfittray ?o)
		(unsafeworldpose ?o1 ?p1)
		(cfree ?o1 ?p1 ?o2 ?p2)
		(on ?o ?r)
		(holding ?o)
		(= ?x ?y)
	)
	(:functions
	)
	(:action move_to_sink
		:parameters (?q1 ?q2)
		:precondition (and (atbconf ?q1) (atstove ?q1) (atsink ?q2) (holding_tray ) (canmove ))
		:effect (and (atbconf ?q2) (not (atbconf ?q1)) (not (canmove )))
	)
	(:action move_to_stove
		:parameters (?q1 ?q2)
		:precondition (and (atbconf ?q1) (atsink ?q1) (atstove ?q2) (holding_tray ) (canmove ))
		:effect (and (atbconf ?q2) (not (atbconf ?q1)) (not (canmove )))
	)
	(:action pick_at_sink
		:parameters (?o ?wp ?rp ?r ?rwp ?g ?q ?t ?q2)
		:precondition (and (posekin ?o ?wp ?g ?q2 ?t) (atsink ?q) (atsink ?q2) (atworldpose ?o ?wp) (handempty ) (atbconf ?q) (relpose ?o ?rp ?r) (atrelpose ?o ?rp) (computedposekin ?o ?wp ?rp ?r ?rwp))
		:effect (and (atgrasp ?o ?g) (not (atworldpose ?o ?wp)) (not (atrelpose ?o ?rp)) (atbconf ?q2) (not (atbconf ?q)) (not (handempty )) (canmove ) (forall (?o2 ?wp2 ?rp2) (when (and (computedposekin ?o2 ?wp2 ?rp2 ?o ?wp) (atrelpose ?o2 ?rp2) (atworldpose ?o2 ?wp2)) (not (atworldpose ?o2 ?wp2)))))
	)
	(:action place_at_sink
		:parameters (?o ?wp ?rp ?r ?rwp ?g ?q ?t ?q2)
		:precondition (and (posekin ?o ?wp ?g ?q2 ?t) (atsink ?q) (atsink ?q2) (atgrasp ?o ?g) (atbconf ?q) (worldpose ?o ?wp) (stackable ?o ?r) (atworldpose ?r ?rwp) (relpose ?o ?rp ?r) (computedposekin ?o ?wp ?rp ?r ?rwp))
		:effect (and (atworldpose ?o ?wp) (handempty ) (not (atgrasp ?o ?g)) (atrelpose ?o ?rp) (atbconf ?q2) (not (atbconf ?q)) (canmove ) (forall (?o2 ?wp2 ?rp2) (when (and (computedposekin ?o2 ?wp2 ?rp2 ?o ?wp) (atrelpose ?o2 ?rp2) (worldpose ?o2 ?wp2)) (atworldpose ?o2 ?wp2))))
	)
	(:action pick_at_stove
		:parameters (?o ?wp ?rp ?r ?rwp ?g ?q ?t ?q2)
		:precondition (and (posekin ?o ?wp ?g ?q2 ?t) (atstove ?q) (atstove ?q2) (atworldpose ?o ?wp) (handempty ) (atbconf ?q) (relpose ?o ?rp ?r) (atrelpose ?o ?rp) (computedposekin ?o ?wp ?rp ?r ?rwp))
		:effect (and (atgrasp ?o ?g) (not (atworldpose ?o ?wp)) (not (atrelpose ?o ?rp)) (atbconf ?q2) (not (atbconf ?q)) (not (handempty )) (canmove ) (forall (?o2 ?wp2 ?rp2) (when (and (computedposekin ?o2 ?wp2 ?rp2 ?o ?wp) (atrelpose ?o2 ?rp2) (atworldpose ?o2 ?wp2)) (not (atworldpose ?o2 ?wp2)))))
	)
	(:action place_at_stove
		:parameters (?o ?wp ?rp ?r ?rwp ?g ?q ?t ?q2)
		:precondition (and (posekin ?o ?wp ?g ?q2 ?t) (atstove ?q) (atstove ?q2) (atgrasp ?o ?g) (atbconf ?q) (worldpose ?o ?wp) (stackable ?o ?r) (atworldpose ?r ?rwp) (relpose ?o ?rp ?r) (computedposekin ?o ?wp ?rp ?r ?rwp))
		:effect (and (atworldpose ?o ?wp) (handempty ) (not (atgrasp ?o ?g)) (atrelpose ?o ?rp) (atbconf ?q2) (not (atbconf ?q)) (canmove ) (forall (?o2 ?wp2 ?rp2) (when (and (computedposekin ?o2 ?wp2 ?rp2 ?o ?wp) (atrelpose ?o2 ?rp2) (worldpose ?o2 ?wp2)) (atworldpose ?o2 ?wp2))))
	)
	(:derived (on ?o ?r)
		(exists (?rp) (and (atrelpose ?o ?rp) (relpose ?o ?rp ?r)))
	)
	(:derived (canfittray ?o)
		(exists (?rp) (forall (?o2 ?rp2) (and (tray_relpose ?o ?rp) (or (cfree ?o ?rp ?o2 ?rp2) (not (atrelpose ?o2 ?rp2)) (not (tray_relpose ?o2 ?rp2))))))
	)
	(:derived (holding ?o)
		(exists (?g) (and (grasp ?o ?g) (atgrasp ?o ?g)))
	)
	(:derived (holding_tray )
		(exists (?o) (and (holding ?o) (tray ?o)))
	)
)
